uniform float time;
uniform vec2 resolution;

float stars(vec2 uv,float scale)
{
	float w=smoothstep(9.,0.,-uv.y*(scale/10.));if(w<.1)return 0.;
	uv+=time/scale;
	uv.y-=time*2./scale;uv.x+=sin(uv.y+time*.5)/scale;
	uv*=scale;
	vec2 s=floor(uv),f=fract(uv),p;float k=3.,d;
	p=.5+.35*sin(11.*fract(sin((s+p+scale)*mat2(7,3,6,5))*5.))-f;d=length(p);k=min(d,k);
	k=smoothstep(0.,k,sin(f.x+f.y)*0.01);
    return k*w;
}

void main(void)
{
	vec2 uv=(gl_FragCoord.xy*2.-resolution.xy)/min(resolution.x,resolution.y); 
	vec3 finalColor=vec3(0);
	float c=stars(uv,30.)*.3;
	c+=stars(uv,20.)*.5;
	c+=stars(uv,15.)*.8;
	c+=stars(uv,10.);
	c+=stars(uv,8.);
	c+=stars(uv,6.);
	c+=stars(uv,5.);
	float modulo = mod(time, 10.0);
	if(modulo > 5.0)
	{
		modulo -= ((modulo - 5.0) * 2.0); 
	}
	modulo /= 5.0;
	modulo += 0.35;
	if(modulo > 1.0)
	{
		modulo = 1.0;
	}
	gl_FragColor = vec4(c * modulo, c * modulo, c,c);
}